# Generated by Django 5.2.1 on 2025-08-19 06:51

from django.db import migrations



def normalize_url(url: str) -> str:
    if not url:
        return ""
    import urllib.parse
    u = urllib.parse.urlsplit(url)
    q = urllib.parse.parse_qsl(u.query, keep_blank_values=True)
    q = [(k, v) for (k, v) in q if not k.lower().startswith("utm_")]
    query = urllib.parse.urlencode(sorted(q))
    netloc = u.netloc.lower()
    path = u.path or "/"
    return urllib.parse.urlunsplit((u.scheme, netloc, path, query, ""))

def make_url_hash(url: str) -> str:
    import hashlib
    norm = normalize_url(url)
    return hashlib.sha256(norm.encode("utf-8")).hexdigest()

def forwards(apps, schema_editor):
    News = apps.get_model("stocks", "News")
    for n in News.objects.all().iterator():
        # canonical_url 우선, 없으면 url 사용
        base = n.canonical_url or n.url or ""
        if not base:
            # URL이 전혀 없으면 스킵(필요 시 임의 처리 가능)
            continue
        h = make_url_hash(base)
        # 중복 충돌 가능성 낮지만, 혹시를 대비하여 동형 해시가 있으면 뒤에 접미사 추가
        orig = h
        i = 1
        while News.objects.filter(url_hash=h).exclude(pk=n.pk).exists():
            h = f"{orig[:-2]}{i:02d}"
            i += 1
        n.url_hash = h
        n.save(update_fields=["url_hash"])

def backwards(apps, schema_editor):
    # 되돌리기: 해시만 비움
    News = apps.get_model("stocks", "News")
    News.objects.update(url_hash=None)



class Migration(migrations.Migration):

    dependencies = [
        ('stocks', '0003_newsstock_alter_news_options_remove_news_stock_and_more'),
    ]

    operations = [
        migrations.RunPython(forwards, backwards),
    ]

