services:
  db:
    image: postgres:17
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - db_data_ci:/var/lib/postgresql/data

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    volumes:
      - redis_data_ci:/data

  migrate:
    build:
      context: .
      dockerfile: Dockerfile.dev
    command: >
      sh -c "./scripts/wait-for-db.sh && python manage.py migrate"
    environment:
      DJANGO_SETTINGS_MODULE: stockq.settings.ci
    env_file:
      - .env
    depends_on:
      - db
      - redis

  web:
    build:
      context: .
      dockerfile: Dockerfile.dev
    command: >
      sh -c "./scripts/wait-for-db.sh && python manage.py test --keepdb"
    environment:
      DJANGO_SETTINGS_MODULE: stockq.settings.ci
    env_file:
      - .env
    depends_on:
      migrate:
        condition: service_completed_successfully

  celery_worker:
    build:
      context: .
      dockerfile: Dockerfile.dev
    command: >
      sh -c "./scripts/wait-for-db.sh && celery -A stockq worker -l info"
    environment:
      DJANGO_SETTINGS_MODULE: stockq.settings.ci
    env_file:
      - .env
    depends_on:
      migrate:
        condition: service_completed_successfully

  celery_beat:
    build:
      context: .
      dockerfile: Dockerfile.dev
    command: >
      sh -c "./scripts/wait-for-db.sh && celery -A stockq beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler"
    environment:
      DJANGO_SETTINGS_MODULE: stockq.settings.ci
    env_file:
      - .env
    depends_on:
      migrate:
        condition: service_completed_successfully

volumes:
  db_data_ci:
  redis_data_ci:
